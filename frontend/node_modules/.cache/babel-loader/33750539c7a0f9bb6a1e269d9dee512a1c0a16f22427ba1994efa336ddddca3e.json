{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha Kini\\\\Desktop\\\\DBMS\\\\travel-agency-system\\\\frontend\\\\src\\\\pages\\\\ConfirmBooking.js\",\n  _s = $RefreshSig$();\n// // // // // import React, { useState } from 'react';\n// // // // // import InputField from '../components/InputField';\n// // // // // import Button from '../components/Button';\n\n// // // // // const ConfirmBooking = () => {\n// // // // //   const [distance, setDistance] = useState('');\n// // // // //   const [amount, setAmount] = useState('');\n\n// // // // //   const handleCalculate = () => {\n// // // // //     const calculatedAmount = distance * 10; // Example calculation\n// // // // //     setAmount(calculatedAmount);\n// // // // //   };\n\n// // // // //   const containerStyle = {\n// // // // //     padding: '20px',\n// // // // //     backgroundColor: '#2b2b42',\n// // // // //     color: '#fff',\n// // // // //     minHeight: '100vh',\n// // // // //     textAlign: 'center',\n// // // // //   };\n\n// // // // //   const formStyle = {\n// // // // //     maxWidth: '500px',\n// // // // //     margin: '0 auto',\n// // // // //     backgroundColor: '#3e3e58',\n// // // // //     padding: '20px',\n// // // // //     borderRadius: '8px',\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div style={containerStyle}>\n// // // // //       <h2>Confirm Booking</h2>\n// // // // //       <div style={formStyle}>\n// // // // //         <InputField label=\"Distance\" value={distance} onChange={(e) => setDistance(e.target.value)} />\n// // // // //         <Button text=\"Calculate\" onClick={handleCalculate} color=\"#17a2b8\" />\n// // // // //         <InputField label=\"Amount\" value={amount} type=\"number\" readOnly />\n// // // // //         <Button text=\"Confirm Booking\" color=\"#28a745\" />\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default ConfirmBooking;\n\n// // // // import React, { useState } from \"react\";\n// // // // import { useNavigate } from \"react-router-dom\";\n\n// // // // const ConfirmBooking = () => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     tripId: \"\",\n// // // //     source: \"\",\n// // // //     destination: \"\",\n// // // //     journeyDate: \"\",\n// // // //     endDate: \"\",\n// // // //     customerName: \"\",\n// // // //     address: \"\",\n// // // //     phone: \"\",\n// // // //   });\n\n// // // //   const navigate = useNavigate();\n\n// // // //   const handleChange = (e) => {\n// // // //     const { name, value } = e.target;\n// // // //     setFormData((prev) => ({ ...prev, [name]: value }));\n// // // //   };\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n\n// // // //     try {\n// // // //       const response = await fetch(\"http://localhost:5000/api/bookings\", {\n// // // //         method: \"POST\",\n// // // //         headers: { \"Content-Type\": \"application/json\" },\n// // // //         body: JSON.stringify({ ...formData, customerId: \"AUTO_GENERATED_ID\" }),\n// // // //       });\n\n// // // //       if (response.ok) {\n// // // //         const data = await response.json();\n// // // //         navigate(\"/confirmation\", { state: { ...data } }); // Pass data to confirmation page\n// // // //       } else {\n// // // //         console.error(\"Booking failed:\", await response.text());\n// // // //       }\n// // // //     } catch (error) {\n// // // //       console.error(\"Error occurred:\", error);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <div>\n// // // //       <h2>Confirm Booking</h2>\n// // // //       <form onSubmit={handleSubmit}>\n// // // //         <input\n// // // //           type=\"text\"\n// // // //           name=\"tripId\"\n// // // //           placeholder=\"Trip ID\"\n// // // //           value={formData.tripId}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"text\"\n// // // //           name=\"source\"\n// // // //           placeholder=\"Source\"\n// // // //           value={formData.source}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"text\"\n// // // //           name=\"destination\"\n// // // //           placeholder=\"Destination\"\n// // // //           value={formData.destination}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"date\"\n// // // //           name=\"journeyDate\"\n// // // //           value={formData.journeyDate}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"date\"\n// // // //           name=\"endDate\"\n// // // //           value={formData.endDate}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"text\"\n// // // //           name=\"customerName\"\n// // // //           placeholder=\"Customer Name\"\n// // // //           value={formData.customerName}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <textarea\n// // // //           name=\"address\"\n// // // //           placeholder=\"Address\"\n// // // //           value={formData.address}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <input\n// // // //           type=\"tel\"\n// // // //           name=\"phone\"\n// // // //           placeholder=\"Phone Number\"\n// // // //           value={formData.phone}\n// // // //           onChange={handleChange}\n// // // //           required\n// // // //         />\n// // // //         <button type=\"submit\">Confirm</button>\n// // // //       </form>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default ConfirmBooking;\n\n// // // import React from 'react';\n// // // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // // const ConfirmBooking = () => {\n// // //   const { state } = useLocation();\n// // //   const navigate = useNavigate();\n\n// // //   const handleConfirm = async () => {\n// // //     try {\n// // //       const response = await fetch('http://localhost:5000/api/bookings', {\n// // //         method: 'POST',\n// // //         headers: { 'Content-Type': 'application/json' },\n// // //         body: JSON.stringify(state),\n// // //       });\n\n// // //       if (response.ok) {\n// // //         const data = await response.json();\n// // //         navigate('/confirmation', { state: data });\n// // //       } else {\n// // //         console.error('Error:', await response.text());\n// // //       }\n// // //     } catch (error) {\n// // //       console.error('Network Error:', error);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div>\n// // //       <h2>Confirm Booking</h2>\n// // //       <pre>{JSON.stringify(state, null, 2)}</pre>\n// // //       <button onClick={handleConfirm}>Confirm</button>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default ConfirmBooking;\n\n// // import React from 'react';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const ConfirmBooking = () => {\n// //   const { state } = useLocation();\n// //   const navigate = useNavigate();\n\n// //   const handleConfirm = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/bookings', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(state),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/confirmation', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.text());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Confirm Booking</h2>\n// //       <pre>{JSON.stringify(state, null, 2)}</pre>\n// //       <button onClick={handleConfirm}>Confirm</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmBooking;\n\n// // import React from 'react';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const ConfirmBooking = () => {\n// //   const { state } = useLocation();\n// //   const navigate = useNavigate();\n\n// //   const handleConfirm = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/booking', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(state),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/confirmation', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.text());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Confirm Booking</h2>\n// //       <pre>{JSON.stringify(state, null, 2)}</pre>\n// //       <button onClick={handleConfirm}>Confirm</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmBooking;\n\n// // import React from 'react';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const ConfirmBooking = () => {\n// //   const { state } = useLocation();\n// //   const navigate = useNavigate();\n\n// //   const handleConfirm = async () => {\n// //     try {\n// //       const response = await fetch('http://localhost:5000/api/booking', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(state),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/confirmation', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.text());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Confirm Booking</h2>\n// //       <p>Customer Name: {state.customerName}</p>\n\n// //       <p>Journey Date: {state.journeyDate}</p>\n// //       <p>End Date: {state.endDate}</p>\n\n// //       <p>Price: ${state.price}</p>\n// //       <button onClick={handleConfirm}>Confirm</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmBooking;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const ConfirmBooking = () => {\n// //   const { state } = useLocation();\n// //   const navigate = useNavigate();\n\n// //   const [guide, setGuide] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchGuide = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:5000/api/available-guide');\n// //         if (response.ok) {\n// //           const guideData = await response.json();\n// //           setGuide(guideData);\n// //         } else {\n// //           console.error('Error fetching guide:', await response.text());\n// //         }\n// //       } catch (error) {\n// //         console.error('Network Error:', error);\n// //       }\n// //     };\n\n// //     fetchGuide();\n// //   }, []);\n\n// //   const handleConfirm = async () => {\n// //     try {\n// //       const bookingData = {\n// //         ...state,\n// //         guideName: guide ? guide.name : null,\n// //       };\n\n// //       const response = await fetch('http://localhost:5000/api/booking', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(bookingData),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/confirmation', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.text());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Confirm Booking</h2>\n// //       <p>Customer Name: {state.customerName}</p>\n// //       <p>Journey Date: {state.journeyDate}</p>\n// //       <p>End Date: {state.endDate}</p>\n// //       <p>Price: ${state.price}</p>\n// //       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\n// //       <button onClick={handleConfirm}>Confirm</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmBooking;\n\n// // import React, { useEffect, useState } from 'react';\n// // import { useNavigate, useLocation } from 'react-router-dom';\n\n// // const ConfirmBooking = () => {\n// //   const { state } = useLocation();\n// //   const navigate = useNavigate();\n// //   const [guide, setGuide] = useState(null);\n\n// //   useEffect(() => {\n// //     const fetchGuide = async () => {\n// //       try {\n// //         const response = await fetch('http://localhost:5000/api/available-guide');\n// //         if (response.ok) {\n// //           const guideData = await response.json();\n// //           setGuide(guideData);\n// //         } else {\n// //           console.error('Error fetching guide:', await response.text());\n// //         }\n// //       } catch (error) {\n// //         console.error('Network Error:', error);\n// //       }\n// //     };\n\n// //     fetchGuide();\n// //   }, []);\n\n// //   const handleConfirm = async () => {\n// //     try {\n// //       const bookingData = {\n// //         ...state,\n// //         guideName: guide ? guide.name : null,\n// //       };\n\n// //       const response = await fetch('http://localhost:5000/api/booking', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(bookingData),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/confirmation', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.text());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   const handlePayment = async () => {\n// //     try {\n// //       const sanitizedAmount = parseFloat(String(state.price).replace('$', '').trim());;\n// //       if (isNaN(sanitizedAmount)) {\n// //         console.error('Invalid amount format:', state.price);\n// //         alert('Payment failed: Invalid price format.');\n// //         return;\n// //       }\n// //       const paymentData = {\n// //         customerName: state.customerName,\n// //         amount: sanitizedAmount,\n// //       };\n\n// //       console.log('Payment Data Being Sent:', paymentData);\n// //       const response = await fetch('http://localhost:5000/api/payment', {\n// //         method: 'POST',\n// //         headers: { 'Content-Type': 'application/json' },\n// //         body: JSON.stringify(paymentData),\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         navigate('/payment', { state: data });\n// //       } else {\n// //         console.error('Error:', await response.json());\n// //       }\n// //     } catch (error) {\n// //       console.error('Network Error:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <h2>Confirm Booking</h2>\n// //       <p>Customer Name: {state.customerName}</p>\n// //       <p>Journey Date: {state.journeyDate}</p>\n// //       <p>End Date: {state.endDate}</p>\n// //       <p>Price: ${state.price}</p>\n// //       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\n// //       <button onClick={handleConfirm}>Confirm</button>\n// //       <button onClick={handlePayment}>Payment</button>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmBooking;\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n\n// const ConfirmBooking = () => {\n//   const { state } = useLocation();\n//   const navigate = useNavigate();\n//   const [guide, setGuide] = useState(null);\n\n//   useEffect(() => {\n//     const fetchGuide = async () => {\n//       try {\n//         const response = await fetch('http://localhost:5000/api/available-guide');\n//         if (response.ok) {\n//           const guideData = await response.json();\n//           setGuide(guideData);\n//         } else {\n//           console.error('Error fetching guide:', await response.text());\n//         }\n//       } catch (error) {\n//         console.error('Network Error:', error);\n//       }\n//     };\n\n//     fetchGuide();\n//   }, []);\n\n//   const handleConfirm = async () => {\n//     try {\n//       const bookingData = {\n//         ...state,\n//         guideName: guide ? guide.name : null,\n//       };\n\n//       const response = await fetch('http://localhost:5000/api/booking', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(bookingData),\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         navigate('/confirmation', { state: data });\n//       } else {\n//         console.error('Error:', await response.text());\n//       }\n//     } catch (error) {\n//       console.error('Network Error:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Confirm Booking</h2>\n//       <p>Customer Name: {state.customerName}</p>\n//       <p>Journey Date: {state.journeyDate}</p>\n//       <p>End Date: {state.endDate}</p>\n//       <p>Price: ${state.price}</p>\n//       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\n//       <button onClick={handleConfirm}>Confirm</button>\n\n//     </div>\n//   );\n// };\n\n// export default ConfirmBooking;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmBooking = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [guide, setGuide] = useState(null);\n  useEffect(() => {\n    const fetchGuide = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/allocate-guide', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            customerId: state.customerId\n          }) // Pass the customer ID to the API\n        });\n        if (response.ok) {\n          const guideData = await response.json();\n          setGuide(guideData); // Set the allocated guide details\n        } else {\n          console.error('Error allocating guide:', await response.text());\n        }\n      } catch (error) {\n        console.error('Network Error:', error);\n      } finally {\n        setLoading(false); // Allocation process finished\n      }\n    };\n    allocateGuide(); // Allocate guide when the component mounts\n  }, [state.customerId]);\n  const handleConfirm = async () => {\n    try {\n      const bookingData = {\n        ...state,\n        guideName: guide ? guide.name : null // Use the allocated guide name\n      };\n\n      // Step 1: Create the booking and get the booking details\n      const bookingResponse = await fetch('http://localhost:5000/api/booking', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      if (bookingResponse.ok) {\n        const bookingData = await bookingResponse.json();\n\n        // Step 2: Create the payment data\n        const paymentData = {\n          customerId: bookingData.customerId,\n          // use customerId from booking data\n          amount: state.price // price from booking data\n        };\n        if (!paymentData.amount) {\n          console.error('Amount is missing from payment data');\n          return;\n        }\n        // Step 3: Send payment data to the backend\n        const paymentResponse = await fetch('http://localhost:5000/api/payment', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(paymentData)\n        });\n        if (paymentResponse.ok) {\n          const paymentData = await paymentResponse.json();\n          console.log('Payment processed successfully:', paymentData);\n          // Step 4: Navigate to confirmation page with booking and payment success\n          navigate('/confirmation', {\n            state: {\n              ...bookingData,\n              ...paymentData\n            }\n          });\n        } else {\n          const errorText = await paymentResponse.text();\n          console.error('Error processing payment:', await paymentResponse.text());\n        }\n      } else {\n        const errorText = await bookingResponse.text();\n        console.error('Error creating booking:', await bookingResponse.text());\n      }\n    } catch (error) {\n      console.error('Network Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Confirm Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Customer Name: \", state.customerName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Journey Date: \", state.journeyDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"End Date: \", state.endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: $\", state.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Guide Name: \", loading ? 'Assigning a guide...' : guide ? `Employee ${guide.name}` : 'No guide available.']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmBooking, \"3E4V4buDsng00ncY9CqBnLiTzx8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ConfirmBooking;\nexport default ConfirmBooking;\nvar _c;\n$RefreshReg$(_c, \"ConfirmBooking\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","ConfirmBooking","_s","state","navigate","guide","setGuide","fetchGuide","response","fetch","method","headers","body","JSON","stringify","customerId","ok","guideData","json","console","error","text","setLoading","allocateGuide","handleConfirm","bookingData","guideName","name","bookingResponse","paymentData","amount","price","paymentResponse","log","errorText","children","fileName","_jsxFileName","lineNumber","columnNumber","customerName","journeyDate","endDate","loading","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Harshitha Kini/Desktop/DBMS/travel-agency-system/frontend/src/pages/ConfirmBooking.js"],"sourcesContent":["// // // // // import React, { useState } from 'react';\r\n// // // // // import InputField from '../components/InputField';\r\n// // // // // import Button from '../components/Button';\r\n\r\n// // // // // const ConfirmBooking = () => {\r\n// // // // //   const [distance, setDistance] = useState('');\r\n// // // // //   const [amount, setAmount] = useState('');\r\n\r\n// // // // //   const handleCalculate = () => {\r\n// // // // //     const calculatedAmount = distance * 10; // Example calculation\r\n// // // // //     setAmount(calculatedAmount);\r\n// // // // //   };\r\n\r\n// // // // //   const containerStyle = {\r\n// // // // //     padding: '20px',\r\n// // // // //     backgroundColor: '#2b2b42',\r\n// // // // //     color: '#fff',\r\n// // // // //     minHeight: '100vh',\r\n// // // // //     textAlign: 'center',\r\n// // // // //   };\r\n\r\n// // // // //   const formStyle = {\r\n// // // // //     maxWidth: '500px',\r\n// // // // //     margin: '0 auto',\r\n// // // // //     backgroundColor: '#3e3e58',\r\n// // // // //     padding: '20px',\r\n// // // // //     borderRadius: '8px',\r\n// // // // //   };\r\n\r\n// // // // //   return (\r\n// // // // //     <div style={containerStyle}>\r\n// // // // //       <h2>Confirm Booking</h2>\r\n// // // // //       <div style={formStyle}>\r\n// // // // //         <InputField label=\"Distance\" value={distance} onChange={(e) => setDistance(e.target.value)} />\r\n// // // // //         <Button text=\"Calculate\" onClick={handleCalculate} color=\"#17a2b8\" />\r\n// // // // //         <InputField label=\"Amount\" value={amount} type=\"number\" readOnly />\r\n// // // // //         <Button text=\"Confirm Booking\" color=\"#28a745\" />\r\n// // // // //       </div>\r\n// // // // //     </div>\r\n// // // // //   );\r\n// // // // // };\r\n\r\n// // // // // export default ConfirmBooking;\r\n\r\n// // // // import React, { useState } from \"react\";\r\n// // // // import { useNavigate } from \"react-router-dom\";\r\n\r\n// // // // const ConfirmBooking = () => {\r\n// // // //   const [formData, setFormData] = useState({\r\n// // // //     tripId: \"\",\r\n// // // //     source: \"\",\r\n// // // //     destination: \"\",\r\n// // // //     journeyDate: \"\",\r\n// // // //     endDate: \"\",\r\n// // // //     customerName: \"\",\r\n// // // //     address: \"\",\r\n// // // //     phone: \"\",\r\n// // // //   });\r\n\r\n// // // //   const navigate = useNavigate();\r\n\r\n// // // //   const handleChange = (e) => {\r\n// // // //     const { name, value } = e.target;\r\n// // // //     setFormData((prev) => ({ ...prev, [name]: value }));\r\n// // // //   };\r\n\r\n// // // //   const handleSubmit = async (e) => {\r\n// // // //     e.preventDefault();\r\n\r\n// // // //     try {\r\n// // // //       const response = await fetch(\"http://localhost:5000/api/bookings\", {\r\n// // // //         method: \"POST\",\r\n// // // //         headers: { \"Content-Type\": \"application/json\" },\r\n// // // //         body: JSON.stringify({ ...formData, customerId: \"AUTO_GENERATED_ID\" }),\r\n// // // //       });\r\n\r\n// // // //       if (response.ok) {\r\n// // // //         const data = await response.json();\r\n// // // //         navigate(\"/confirmation\", { state: { ...data } }); // Pass data to confirmation page\r\n// // // //       } else {\r\n// // // //         console.error(\"Booking failed:\", await response.text());\r\n// // // //       }\r\n// // // //     } catch (error) {\r\n// // // //       console.error(\"Error occurred:\", error);\r\n// // // //     }\r\n// // // //   };\r\n\r\n// // // //   return (\r\n// // // //     <div>\r\n// // // //       <h2>Confirm Booking</h2>\r\n// // // //       <form onSubmit={handleSubmit}>\r\n// // // //         <input\r\n// // // //           type=\"text\"\r\n// // // //           name=\"tripId\"\r\n// // // //           placeholder=\"Trip ID\"\r\n// // // //           value={formData.tripId}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"text\"\r\n// // // //           name=\"source\"\r\n// // // //           placeholder=\"Source\"\r\n// // // //           value={formData.source}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"text\"\r\n// // // //           name=\"destination\"\r\n// // // //           placeholder=\"Destination\"\r\n// // // //           value={formData.destination}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"date\"\r\n// // // //           name=\"journeyDate\"\r\n// // // //           value={formData.journeyDate}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"date\"\r\n// // // //           name=\"endDate\"\r\n// // // //           value={formData.endDate}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"text\"\r\n// // // //           name=\"customerName\"\r\n// // // //           placeholder=\"Customer Name\"\r\n// // // //           value={formData.customerName}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <textarea\r\n// // // //           name=\"address\"\r\n// // // //           placeholder=\"Address\"\r\n// // // //           value={formData.address}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <input\r\n// // // //           type=\"tel\"\r\n// // // //           name=\"phone\"\r\n// // // //           placeholder=\"Phone Number\"\r\n// // // //           value={formData.phone}\r\n// // // //           onChange={handleChange}\r\n// // // //           required\r\n// // // //         />\r\n// // // //         <button type=\"submit\">Confirm</button>\r\n// // // //       </form>\r\n// // // //     </div>\r\n// // // //   );\r\n// // // // };\r\n\r\n// // // // export default ConfirmBooking;\r\n\r\n\r\n\r\n// // // import React from 'react';\r\n// // // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // // const ConfirmBooking = () => {\r\n// // //   const { state } = useLocation();\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const handleConfirm = async () => {\r\n// // //     try {\r\n// // //       const response = await fetch('http://localhost:5000/api/bookings', {\r\n// // //         method: 'POST',\r\n// // //         headers: { 'Content-Type': 'application/json' },\r\n// // //         body: JSON.stringify(state),\r\n// // //       });\r\n\r\n// // //       if (response.ok) {\r\n// // //         const data = await response.json();\r\n// // //         navigate('/confirmation', { state: data });\r\n// // //       } else {\r\n// // //         console.error('Error:', await response.text());\r\n// // //       }\r\n// // //     } catch (error) {\r\n// // //       console.error('Network Error:', error);\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div>\r\n// // //       <h2>Confirm Booking</h2>\r\n// // //       <pre>{JSON.stringify(state, null, 2)}</pre>\r\n// // //       <button onClick={handleConfirm}>Confirm</button>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default ConfirmBooking;\r\n\r\n// // import React from 'react';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const ConfirmBooking = () => {\r\n// //   const { state } = useLocation();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleConfirm = async () => {\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/bookings', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(state),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/confirmation', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.text());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Confirm Booking</h2>\r\n// //       <pre>{JSON.stringify(state, null, 2)}</pre>\r\n// //       <button onClick={handleConfirm}>Confirm</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmBooking;\r\n\r\n\r\n// // import React from 'react';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const ConfirmBooking = () => {\r\n// //   const { state } = useLocation();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleConfirm = async () => {\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/booking', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(state),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/confirmation', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.text());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Confirm Booking</h2>\r\n// //       <pre>{JSON.stringify(state, null, 2)}</pre>\r\n// //       <button onClick={handleConfirm}>Confirm</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmBooking;\r\n\r\n\r\n\r\n\r\n// // import React from 'react';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const ConfirmBooking = () => {\r\n// //   const { state } = useLocation();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleConfirm = async () => {\r\n// //     try {\r\n// //       const response = await fetch('http://localhost:5000/api/booking', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(state),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/confirmation', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.text());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Confirm Booking</h2>\r\n// //       <p>Customer Name: {state.customerName}</p>\r\n      \r\n// //       <p>Journey Date: {state.journeyDate}</p>\r\n// //       <p>End Date: {state.endDate}</p>\r\n      \r\n// //       <p>Price: ${state.price}</p>\r\n// //       <button onClick={handleConfirm}>Confirm</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmBooking;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const ConfirmBooking = () => {\r\n// //   const { state } = useLocation();\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const [guide, setGuide] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchGuide = async () => {\r\n// //       try {\r\n// //         const response = await fetch('http://localhost:5000/api/available-guide');\r\n// //         if (response.ok) {\r\n// //           const guideData = await response.json();\r\n// //           setGuide(guideData);\r\n// //         } else {\r\n// //           console.error('Error fetching guide:', await response.text());\r\n// //         }\r\n// //       } catch (error) {\r\n// //         console.error('Network Error:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchGuide();\r\n// //   }, []);\r\n\r\n// //   const handleConfirm = async () => {\r\n// //     try {\r\n// //       const bookingData = {\r\n// //         ...state,\r\n// //         guideName: guide ? guide.name : null,\r\n// //       };\r\n\r\n// //       const response = await fetch('http://localhost:5000/api/booking', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(bookingData),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/confirmation', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.text());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Confirm Booking</h2>\r\n// //       <p>Customer Name: {state.customerName}</p>\r\n// //       <p>Journey Date: {state.journeyDate}</p>\r\n// //       <p>End Date: {state.endDate}</p>\r\n// //       <p>Price: ${state.price}</p>\r\n// //       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\r\n// //       <button onClick={handleConfirm}>Confirm</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmBooking;\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// // const ConfirmBooking = () => {\r\n// //   const { state } = useLocation();\r\n// //   const navigate = useNavigate();\r\n// //   const [guide, setGuide] = useState(null);\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchGuide = async () => {\r\n// //       try {\r\n// //         const response = await fetch('http://localhost:5000/api/available-guide');\r\n// //         if (response.ok) {\r\n// //           const guideData = await response.json();\r\n// //           setGuide(guideData);\r\n// //         } else {\r\n// //           console.error('Error fetching guide:', await response.text());\r\n// //         }\r\n// //       } catch (error) {\r\n// //         console.error('Network Error:', error);\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchGuide();\r\n// //   }, []);\r\n\r\n// //   const handleConfirm = async () => {\r\n// //     try {\r\n// //       const bookingData = {\r\n// //         ...state,\r\n// //         guideName: guide ? guide.name : null,\r\n// //       };\r\n\r\n// //       const response = await fetch('http://localhost:5000/api/booking', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(bookingData),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/confirmation', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.text());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePayment = async () => {\r\n// //     try {\r\n// //       const sanitizedAmount = parseFloat(String(state.price).replace('$', '').trim());;\r\n// //       if (isNaN(sanitizedAmount)) {\r\n// //         console.error('Invalid amount format:', state.price);\r\n// //         alert('Payment failed: Invalid price format.');\r\n// //         return;\r\n// //       }\r\n// //       const paymentData = {\r\n// //         customerName: state.customerName,\r\n// //         amount: sanitizedAmount,\r\n// //       };\r\n\r\n// //       console.log('Payment Data Being Sent:', paymentData);\r\n// //       const response = await fetch('http://localhost:5000/api/payment', {\r\n// //         method: 'POST',\r\n// //         headers: { 'Content-Type': 'application/json' },\r\n// //         body: JSON.stringify(paymentData),\r\n// //       });\r\n\r\n// //       if (response.ok) {\r\n// //         const data = await response.json();\r\n// //         navigate('/payment', { state: data });\r\n// //       } else {\r\n// //         console.error('Error:', await response.json());\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error('Network Error:', error);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Confirm Booking</h2>\r\n// //       <p>Customer Name: {state.customerName}</p>\r\n// //       <p>Journey Date: {state.journeyDate}</p>\r\n// //       <p>End Date: {state.endDate}</p>\r\n// //       <p>Price: ${state.price}</p>\r\n// //       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\r\n// //       <button onClick={handleConfirm}>Confirm</button>\r\n// //       <button onClick={handlePayment}>Payment</button>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmBooking;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n\r\n// const ConfirmBooking = () => {\r\n//   const { state } = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const [guide, setGuide] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchGuide = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:5000/api/available-guide');\r\n//         if (response.ok) {\r\n//           const guideData = await response.json();\r\n//           setGuide(guideData);\r\n//         } else {\r\n//           console.error('Error fetching guide:', await response.text());\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Network Error:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchGuide();\r\n//   }, []);\r\n\r\n//   const handleConfirm = async () => {\r\n//     try {\r\n//       const bookingData = {\r\n//         ...state,\r\n//         guideName: guide ? guide.name : null,\r\n//       };\r\n\r\n//       const response = await fetch('http://localhost:5000/api/booking', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(bookingData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         navigate('/confirmation', { state: data });\r\n//       } else {\r\n//         console.error('Error:', await response.text());\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Network Error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Confirm Booking</h2>\r\n//       <p>Customer Name: {state.customerName}</p>\r\n//       <p>Journey Date: {state.journeyDate}</p>\r\n//       <p>End Date: {state.endDate}</p>\r\n//       <p>Price: ${state.price}</p>\r\n//       <p>Guide Name: {guide ? guide.name : 'Loading...'}</p>\r\n//       <button onClick={handleConfirm}>Confirm</button>\r\n   \r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ConfirmBooking;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ConfirmBooking = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  const [guide, setGuide] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchGuide = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/allocate-guide', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ customerId: state.customerId }), // Pass the customer ID to the API\r\n        });\r\n\r\n        if (response.ok) {\r\n          const guideData = await response.json();\r\n          setGuide(guideData); // Set the allocated guide details\r\n        } else {\r\n          console.error('Error allocating guide:', await response.text());\r\n        }\r\n      } catch (error) {\r\n        console.error('Network Error:', error);\r\n      }finally {\r\n        setLoading(false); // Allocation process finished\r\n      }\r\n    };\r\n\r\n    allocateGuide(); // Allocate guide when the component mounts\r\n  }, [state.customerId]);\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const bookingData = {\r\n        ...state,\r\n        guideName: guide ? guide.name : null, // Use the allocated guide name\r\n      };\r\n\r\n      // Step 1: Create the booking and get the booking details\r\n      const bookingResponse = await fetch('http://localhost:5000/api/booking', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(bookingData),\r\n      });\r\n\r\n      if (bookingResponse.ok) {\r\n        const bookingData = await bookingResponse.json();\r\n\r\n        // Step 2: Create the payment data\r\n        const paymentData = {\r\n          customerId: bookingData.customerId, // use customerId from booking data\r\n          amount: state.price, // price from booking data\r\n        };\r\n        if (!paymentData.amount) {\r\n          console.error('Amount is missing from payment data');\r\n          return;\r\n        }\r\n        // Step 3: Send payment data to the backend\r\n        const paymentResponse = await fetch('http://localhost:5000/api/payment', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(paymentData),\r\n        });\r\n\r\n        if (paymentResponse.ok) {\r\n          const paymentData = await paymentResponse.json();\r\n          console.log('Payment processed successfully:', paymentData);\r\n          // Step 4: Navigate to confirmation page with booking and payment success\r\n          navigate('/confirmation', { state: { ...bookingData, ...paymentData } });\r\n        } else {\r\n          const errorText = await paymentResponse.text();\r\n          console.error('Error processing payment:', await paymentResponse.text());\r\n        }\r\n      } else {\r\n        const errorText = await bookingResponse.text();\r\n        console.error('Error creating booking:', await bookingResponse.text());\r\n      }\r\n    } catch (error) {\r\n      console.error('Network Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Confirm Booking</h2>\r\n      <p>Customer Name: {state.customerName}</p>\r\n      <p>Journey Date: {state.journeyDate}</p>\r\n      <p>End Date: {state.endDate}</p>\r\n      <p>Price: ${state.price}</p>\r\n      <p>\r\n        Guide Name: {loading\r\n          ? 'Assigning a guide...'\r\n          : guide\r\n          ? `Employee ${guide.name}`\r\n          : 'No guide available.'}\r\n      </p>\r\n      <button onClick={handleConfirm}>Confirm</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmBooking;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGL,WAAW,CAAC,CAAC;EAC/B,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAGxCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,UAAU,EAAEZ,KAAK,CAACY;UAAW,CAAC,CAAC,CAAE;QAC1D,CAAC,CAAC;QAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACvCZ,QAAQ,CAACW,SAAS,CAAC,CAAC,CAAC;QACvB,CAAC,MAAM;UACLE,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAE,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC,CAAC;QACjE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC,CAAC,SAAQ;QACPE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACpB,KAAK,CAACY,UAAU,CAAC,CAAC;EAEtB,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,WAAW,GAAG;QAClB,GAAGtB,KAAK;QACRuB,SAAS,EAAErB,KAAK,GAAGA,KAAK,CAACsB,IAAI,GAAG,IAAI,CAAE;MACxC,CAAC;;MAED;MACA,MAAMC,eAAe,GAAG,MAAMnB,KAAK,CAAC,mCAAmC,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACW,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIG,eAAe,CAACZ,EAAE,EAAE;QACtB,MAAMS,WAAW,GAAG,MAAMG,eAAe,CAACV,IAAI,CAAC,CAAC;;QAEhD;QACA,MAAMW,WAAW,GAAG;UAClBd,UAAU,EAAEU,WAAW,CAACV,UAAU;UAAE;UACpCe,MAAM,EAAE3B,KAAK,CAAC4B,KAAK,CAAE;QACvB,CAAC;QACD,IAAI,CAACF,WAAW,CAACC,MAAM,EAAE;UACvBX,OAAO,CAACC,KAAK,CAAC,qCAAqC,CAAC;UACpD;QACF;QACA;QACA,MAAMY,eAAe,GAAG,MAAMvB,KAAK,CAAC,mCAAmC,EAAE;UACvEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACe,WAAW;QAClC,CAAC,CAAC;QAEF,IAAIG,eAAe,CAAChB,EAAE,EAAE;UACtB,MAAMa,WAAW,GAAG,MAAMG,eAAe,CAACd,IAAI,CAAC,CAAC;UAChDC,OAAO,CAACc,GAAG,CAAC,iCAAiC,EAAEJ,WAAW,CAAC;UAC3D;UACAzB,QAAQ,CAAC,eAAe,EAAE;YAAED,KAAK,EAAE;cAAE,GAAGsB,WAAW;cAAE,GAAGI;YAAY;UAAE,CAAC,CAAC;QAC1E,CAAC,MAAM;UACL,MAAMK,SAAS,GAAG,MAAMF,eAAe,CAACX,IAAI,CAAC,CAAC;UAC9CF,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAE,MAAMY,eAAe,CAACX,IAAI,CAAC,CAAC,CAAC;QAC1E;MACF,CAAC,MAAM;QACL,MAAMa,SAAS,GAAG,MAAMN,eAAe,CAACP,IAAI,CAAC,CAAC;QAC9CF,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAE,MAAMQ,eAAe,CAACP,IAAI,CAAC,CAAC,CAAC;MACxE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvC,OAAA;MAAAmC,QAAA,GAAG,iBAAe,EAAChC,KAAK,CAACqC,YAAY;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CvC,OAAA;MAAAmC,QAAA,GAAG,gBAAc,EAAChC,KAAK,CAACsC,WAAW;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCvC,OAAA;MAAAmC,QAAA,GAAG,YAAU,EAAChC,KAAK,CAACuC,OAAO;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvC,OAAA;MAAAmC,QAAA,GAAG,UAAQ,EAAChC,KAAK,CAAC4B,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvC,OAAA;MAAAmC,QAAA,GAAG,cACW,EAACQ,OAAO,GAChB,sBAAsB,GACtBtC,KAAK,GACL,YAAYA,KAAK,CAACsB,IAAI,EAAE,GACxB,qBAAqB;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACJvC,OAAA;MAAQ4C,OAAO,EAAEpB,aAAc;MAAAW,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACrC,EAAA,CAnGID,cAAc;EAAA,QACAH,WAAW,EACZD,WAAW;AAAA;AAAAgD,EAAA,GAFxB5C,cAAc;AAqGpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}