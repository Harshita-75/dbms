{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha Kini\\\\Desktop\\\\DBMS\\\\travel-agency-system\\\\frontend\\\\src\\\\pages\\\\BookingDashboard.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import InputField from '../components/InputField';\n// // import Button from '../components/Button';\n\n// // const BookingDashboard = () => {\n// //   // State variables for form fields\n// //   const [tripId, setTripId] = useState('');\n// //   const [customerId, setCustomerId] = useState('');\n// //   const [source, setSource] = useState('');\n// //   const [destination, setDestination] = useState('');\n// //   const [journeyDate, setJourneyDate] = useState('');\n// //   const [endDate, setEndDate] = useState('');\n// //   const [customerName, setCustomerName] = useState('');\n// //   const [address, setAddress] = useState('');\n// //   const [phone, setPhone] = useState('');\n\n// //   // Inline styles\n// //   const containerStyle = {\n// //     padding: '20px',\n// //     backgroundColor: '#2b2b42',\n// //     color: '#fff',\n// //     minHeight: '100vh',\n// //     textAlign: 'center',\n// //   };\n\n// //   const formStyle = {\n// //     maxWidth: '600px',\n// //     margin: '0 auto',\n// //     backgroundColor: '#3e3e58',\n// //     padding: '20px',\n// //     borderRadius: '8px',\n// //   };\n\n// //   const buttonContainerStyle = {\n// //     display: 'flex',\n// //     justifyContent: 'space-around',\n// //     marginTop: '20px',\n// //   };\n\n// //   return (\n// //     <div style={containerStyle}>\n// //       <h2 style={{ marginBottom: '20px' }}>Booking Dashboard</h2>\n// //       <div style={formStyle}>\n// //         <InputField\n// //           label=\"Trip ID\"\n// //           value={tripId}\n// //           onChange={(e) => setTripId(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Customer ID\"\n// //           value={customerId}\n// //           onChange={(e) => setCustomerId(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Source\"\n// //           value={source}\n// //           onChange={(e) => setSource(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Destination\"\n// //           value={destination}\n// //           onChange={(e) => setDestination(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Journey Date\"\n// //           type=\"date\"\n// //           value={journeyDate}\n// //           onChange={(e) => setJourneyDate(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"End Date\"\n// //           type=\"date\"\n// //           value={endDate}\n// //           onChange={(e) => setEndDate(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Customer Name\"\n// //           value={customerName}\n// //           onChange={(e) => setCustomerName(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Address\"\n// //           value={address}\n// //           onChange={(e) => setAddress(e.target.value)}\n// //         />\n// //         <InputField\n// //           label=\"Phone Number\"\n// //           value={phone}\n// //           onChange={(e) => setPhone(e.target.value)}\n// //         />\n\n// //         <div style={buttonContainerStyle}>\n// //           <Button text=\"Book\" color=\"#28a745\" onClick={() => alert('Trip Booked!')} />\n// //           <Button text=\"Modify\" color=\"#17a2b8\" onClick={() => alert('Trip Modified!')} />\n// //           <Button text=\"Delete\" color=\"#dc3545\" onClick={() => alert('Trip Deleted!')} />\n// //           <Button text=\"Clear\" color=\"#ffc107\" onClick={() => {\n// //             setTripId('');\n// //             setCustomerId('');\n// //             setSource('');\n// //             setDestination('');\n// //             setJourneyDate('');\n// //             setEndDate('');\n// //             setCustomerName('');\n// //             setAddress('');\n// //             setPhone('');\n// //           }} />\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default BookingDashboard;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import InputField from '../components/InputField';\n// import Button from '../components/Button';\n\n// const BookingDashboard = () => {\n//   const navigate = useNavigate();\n//   const [source, setSource] = useState('');\n//   const [destination, setDestination] = useState('');\n//   const [journeyDate, setJourneyDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const [customerName, setCustomerName] = useState('');\n//   const [address, setAddress] = useState('');\n//   const [phone, setPhone] = useState('');\n\n//   const handleConfirm = () => {\n//     const customerId = `CUST${Math.floor(1000 + Math.random() * 9000)}`; // Auto-generate customer ID\n//     const tripId = `TRIP${Math.floor(1000 + Math.random() * 9000)}`; // Auto-generate trip ID\n\n//     const bookingDetails = {\n//       customerId,\n//       tripId,\n//       source,\n//       destination,\n//       journeyDate,\n//       endDate,\n//       customerName,\n//       address,\n//       phone,\n//     };\n\n//     navigate('/confirm-booking', { state: bookingDetails }); // Pass details to ConfirmBooking page\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', backgroundColor: '#2b2b42', color: '#fff', minHeight: '100vh', textAlign: 'center' }}>\n//       <h2>Booking Dashboard</h2>\n//       <div style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#3e3e58', padding: '20px', borderRadius: '8px' }}>\n//         <InputField label=\"Source\" value={source} onChange={(e) => setSource(e.target.value)} />\n//         <InputField label=\"Destination\" value={destination} onChange={(e) => setDestination(e.target.value)} />\n//         <InputField label=\"Journey Date\" type=\"date\" value={journeyDate} onChange={(e) => setJourneyDate(e.target.value)} />\n//         <InputField label=\"End Date\" type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n//         <InputField label=\"Customer Name\" value={customerName} onChange={(e) => setCustomerName(e.target.value)} />\n//         <InputField label=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} />\n//         <InputField label=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\n\n//         <div style={{ marginTop: '20px' }}>\n//           <Button text=\"Confirm\" color=\"#28a745\" onClick={handleConfirm} />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BookingDashboard;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const BookingDashboard = () => {\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     source: '',\n//     destination: '',\n//     journeyDate: '',\n//     endDate: '',\n//     customerName: '',\n//     address: '',\n//     phone: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = () => {\n//     const customerId = `CUST${Math.floor(1000 + Math.random() * 9000)}`;\n//     const tripId = `TRIP${Math.floor(1000 + Math.random() * 9000)}`;\n\n//     navigate('/confirm-booking', {\n//       state: { ...formData, customerId, tripId },\n//     });\n//   };\n\n//   return (\n//     <div>\n//       <h2>Booking Dashboard</h2>\n//       <form>\n//         <input name=\"source\" placeholder=\"Source\" onChange={handleChange} />\n//         <input name=\"destination\" placeholder=\"Destination\" onChange={handleChange} />\n//         <input name=\"journeyDate\" type=\"date\" onChange={handleChange} />\n//         <input name=\"endDate\" type=\"date\" onChange={handleChange} />\n//         <input name=\"customerName\" placeholder=\"Customer Name\" onChange={handleChange} />\n//         <input name=\"address\" placeholder=\"Address\" onChange={handleChange} />\n//         <input name=\"phone\" placeholder=\"Phone\" onChange={handleChange} />\n//         <button type=\"button\" onClick={handleSubmit}>\n//           Next\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default BookingDashboard;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const BookingDashboard = () => {\n//   const [showModal, setShowModal] = useState(false);\n\n//   const navigate = useNavigate();\n//   const [formData, setFormData] = useState({\n//     source: '',\n//     destination: '',\n//     journeyDate: '',\n//     endDate: '',\n//     customerName: '',\n//     address: '',\n//     phone: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (response.ok) {\n//         const result = await response.json();\n//         navigate('/confirm-booking', {\n//           state: { ...formData, bookingId: result.bookingId },\n//         });\n//       } else {\n//         alert('Booking failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error during booking:', error);\n//     }\n//   };\n\n//   return (\n//     <div\n\n// style={{\n//   minHeight: '100vh',\n//   backgroundImage: 'url(\"https://wallpaperaccess.com/full/136008.jpg\")',\n//   backgroundSize: 'cover',\n//   backgroundPosition: 'center',\n//   display: 'flex',\n//   alignItems: 'center',\n//   justifyContent: 'center',\n//   fontFamily: 'Arial, sans-serif',\n//   color: '#fff',\n//   position: 'relative',\n// }}\n// >\n// <button\n//   onClick={() => setShowModal(true)}\n//   style={{\n//     padding: '15px 30px',\n//     fontSize: '16px',\n//     border: 'none',\n//     borderRadius: '5px',\n//     background: 'linear-gradient(90deg, #fffe5f, #feb47b)',\n//     color: '#000',\n//     cursor: 'pointer',\n//     boxShadow: '0 4px 6px rgba(0, 0, 0, 0.3)',\n//     transition: 'all 0.3s ease',\n//   }}\n//   onMouseOver={(e) => {\n//     e.target.style.transform = 'scale(1.1)';\n//     e.target.style.boxShadow = '0 6px 8px rgba(0, 0, 0, 0.5)';\n//   }}\n//   onMouseOut={(e) => {\n//     e.target.style.transform = 'scale(1)';\n//     e.target.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.3)';\n//   }}\n// >\n//   Open Booking Form\n// </button>\n\n// {showModal && (\n//   <div\n//     style={{\n//       position: 'fixed',\n//       top: '0',\n//       left: '0',\n//       width: '100%',\n//       height: '100%',\n//       background: 'rgba(0, 0, 0, 0.7)',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       zIndex: 1000,\n//     }}\n//   >\n//     <div\n//       style={{\n//         background: '#fff',\n//         borderRadius: '10px',\n//         padding: '30px',\n//         width: '400px',\n//         boxShadow: '0 8px 15px rgba(0, 0, 0, 0.5)',\n//         position: 'relative',\n//       }}\n//     >\n//       <h2\n//         style={{\n//           textAlign: 'center',\n//           marginBottom: '20px',\n//           color: '#333',\n//           fontSize: '20px',\n//         }}\n//       >\n//         Booking Form\n//       </h2>\n//       <form style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\n//         <input\n//           name=\"source\"\n//           placeholder=\"Source\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"destination\"\n//           placeholder=\"Destination\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"journeyDate\"\n//           type=\"date\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"endDate\"\n//           type=\"date\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"customerName\"\n//           placeholder=\"Customer Name\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"address\"\n//           placeholder=\"Address\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <input\n//           name=\"phone\"\n//           placeholder=\"Phone\"\n//           onChange={handleChange}\n//           style={{\n//             padding: '10px',\n//             border: '1px solid #ccc',\n//             borderRadius: '5px',\n//             fontSize: '14px',\n//           }}\n//         />\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n//           <button\n//             type=\"button\"\n//             onClick={() => setShowModal(false)}\n//             style={{\n//               padding: '10px 20px',\n//               backgroundColor: '#ccc',\n//               border: 'none',\n//               borderRadius: '5px',\n//               cursor: 'pointer',\n//             }}\n//           >\n//             Cancel\n//           </button>\n//           <button\n//             type=\"button\"\n//             onClick={handleSubmit}\n//             style={{\n//               padding: '10px 20px',\n//               backgroundColor: '#ff7e5f',\n//               border: 'none',\n//               borderRadius: '5px',\n//               color: '#fff',\n//               cursor: 'pointer',\n//             }}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   </div>\n// )}\n// </div>\n// );\n// };\n\n// export default BookingDashboard;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const BookingDashboard = () => {\n//   const [showModal, setShowModal] = useState(false);\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     source: '',\n//     destination: '',\n//     journeyDate: '',\n//     endDate: '',\n//     customerName: '',\n//     address: '',\n//     phone: '',\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleSubmit = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/booking', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       if (response.ok) {\n//         const result = await response.json();\n//         navigate('/confirm-booking', {\n//           state: { ...formData, bookingId: result.bookingId },\n//         });\n//       } else {\n//         alert('Booking failed. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error during booking:', error);\n//     }\n//   };\n\n//   return (\n//     <div style={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n//       <button onClick={() => setShowModal(true)}>Open Booking Form</button>\n\n//       {showModal && (\n//         <div\n//           style={{\n//             position: 'fixed',\n//             top: '0',\n//             left: '0',\n//             width: '100%',\n//             height: '100%',\n//             background: 'rgba(0, 0, 0, 0.7)',\n//             display: 'flex',\n//             alignItems: 'center',\n//             justifyContent: 'center',\n//             zIndex: 1000,\n//           }}\n//         >\n//           <div\n//             style={{\n//               background: '#fff',\n//               borderRadius: '10px',\n//               padding: '30px',\n//               width: '400px',\n//               boxShadow: '0 8px 15px rgba(0, 0, 0, 0.5)',\n//               position: 'relative',\n//             }}\n//           >\n//             <h2 style={{ textAlign: 'center' }}>Booking Form</h2>\n//             <form>\n//               <input\n//                 name=\"source\"\n//                 placeholder=\"Source\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"destination\"\n//                 placeholder=\"Destination\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"journeyDate\"\n//                 type=\"date\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"endDate\"\n//                 type=\"date\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"customerName\"\n//                 placeholder=\"Customer Name\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"address\"\n//                 placeholder=\"Address\"\n//                 onChange={handleChange}\n//               />\n//               <input\n//                 name=\"phone\"\n//                 placeholder=\"Phone\"\n//                 onChange={handleChange}\n//               />\n//               <button type=\"button\" onClick={handleSubmit}>Next</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookingDashboard;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingDashboard = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    source: '',\n    destination: '',\n    journeyDate: '',\n    endDate: '',\n    customerName: '',\n    address: '',\n    phone: ''\n  });\n  const [packages, setPackages] = useState([]);\n  const [selectedPackage, setSelectedPackage] = useState(null);\n  const [showPackages, setShowPackages] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const fetchPackages = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/packages?source=${formData.source}&destination=${formData.destination}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPackages(data);\n        setShowPackages(true);\n      } else {\n        alert('No packages available for the selected source and destination.');\n      }\n    } catch (error) {\n      console.error('Error fetching packages:', error);\n    }\n  };\n  const handleNext = e => {\n    e.preventDefault();\n    fetchPackages();\n  };\n  const handlePackageSelect = pkg => {\n    setSelectedPackage(pkg);\n  };\n  const handleSubmit = () => {\n    if (selectedPackage) {\n      navigate('/confirm-booking', {\n        state: {\n          ...formData,\n          ...selectedPackage\n        }\n      });\n    } else {\n      alert('Please select a package to proceed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        width: '400px'\n      },\n      onSubmit: handleNext,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"source\",\n        placeholder: \"Source\",\n        value: formData.source,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"destination\",\n        placeholder: \"Destination\",\n        value: formData.destination,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"journeyDate\",\n        type: \"date\",\n        value: formData.journeyDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"endDate\",\n        type: \"date\",\n        value: formData.endDate,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"customerName\",\n        placeholder: \"Customer Name\",\n        value: formData.customerName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"address\",\n        placeholder: \"Address\",\n        value: formData.address,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        placeholder: \"Phone\",\n        value: formData.phone,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this), showPackages && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Package\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 11\n      }, this), packages.length > 0 ? packages.map((pkg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            padding: '10px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          onClick: () => handlePackageSelect(pkg),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: pkg.package_details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", pkg.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Source: \", pkg.source]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Destination: \", pkg.destination]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No packages available for the selected source and destination.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 13\n      }, this), selectedPackage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Confirm Booking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 647,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingDashboard, \"xbGOlZc1hHjQTMk9/64PwD+n6WY=\", false, function () {\n  return [useNavigate];\n});\n_c = BookingDashboard;\nexport default BookingDashboard;\nvar _c;\n$RefreshReg$(_c, \"BookingDashboard\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BookingDashboard","_s","formData","setFormData","source","destination","journeyDate","endDate","customerName","address","phone","packages","setPackages","selectedPackage","setSelectedPackage","showPackages","setShowPackages","navigate","handleChange","e","name","value","target","prev","fetchPackages","response","fetch","ok","data","json","alert","error","console","handleNext","preventDefault","handlePackageSelect","pkg","handleSubmit","state","style","minHeight","display","alignItems","justifyContent","children","width","onSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","marginTop","length","map","index","margin","padding","backgroundColor","color","border","cursor","onClick","package_details","price","_c","$RefreshReg$"],"sources":["C:/Users/Harshitha Kini/Desktop/DBMS/travel-agency-system/frontend/src/pages/BookingDashboard.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import InputField from '../components/InputField';\r\n// // import Button from '../components/Button';\r\n\r\n// // const BookingDashboard = () => {\r\n// //   // State variables for form fields\r\n// //   const [tripId, setTripId] = useState('');\r\n// //   const [customerId, setCustomerId] = useState('');\r\n// //   const [source, setSource] = useState('');\r\n// //   const [destination, setDestination] = useState('');\r\n// //   const [journeyDate, setJourneyDate] = useState('');\r\n// //   const [endDate, setEndDate] = useState('');\r\n// //   const [customerName, setCustomerName] = useState('');\r\n// //   const [address, setAddress] = useState('');\r\n// //   const [phone, setPhone] = useState('');\r\n\r\n// //   // Inline styles\r\n// //   const containerStyle = {\r\n// //     padding: '20px',\r\n// //     backgroundColor: '#2b2b42',\r\n// //     color: '#fff',\r\n// //     minHeight: '100vh',\r\n// //     textAlign: 'center',\r\n// //   };\r\n\r\n// //   const formStyle = {\r\n// //     maxWidth: '600px',\r\n// //     margin: '0 auto',\r\n// //     backgroundColor: '#3e3e58',\r\n// //     padding: '20px',\r\n// //     borderRadius: '8px',\r\n// //   };\r\n\r\n// //   const buttonContainerStyle = {\r\n// //     display: 'flex',\r\n// //     justifyContent: 'space-around',\r\n// //     marginTop: '20px',\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div style={containerStyle}>\r\n// //       <h2 style={{ marginBottom: '20px' }}>Booking Dashboard</h2>\r\n// //       <div style={formStyle}>\r\n// //         <InputField\r\n// //           label=\"Trip ID\"\r\n// //           value={tripId}\r\n// //           onChange={(e) => setTripId(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Customer ID\"\r\n// //           value={customerId}\r\n// //           onChange={(e) => setCustomerId(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Source\"\r\n// //           value={source}\r\n// //           onChange={(e) => setSource(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Destination\"\r\n// //           value={destination}\r\n// //           onChange={(e) => setDestination(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Journey Date\"\r\n// //           type=\"date\"\r\n// //           value={journeyDate}\r\n// //           onChange={(e) => setJourneyDate(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"End Date\"\r\n// //           type=\"date\"\r\n// //           value={endDate}\r\n// //           onChange={(e) => setEndDate(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Customer Name\"\r\n// //           value={customerName}\r\n// //           onChange={(e) => setCustomerName(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Address\"\r\n// //           value={address}\r\n// //           onChange={(e) => setAddress(e.target.value)}\r\n// //         />\r\n// //         <InputField\r\n// //           label=\"Phone Number\"\r\n// //           value={phone}\r\n// //           onChange={(e) => setPhone(e.target.value)}\r\n// //         />\r\n\r\n// //         <div style={buttonContainerStyle}>\r\n// //           <Button text=\"Book\" color=\"#28a745\" onClick={() => alert('Trip Booked!')} />\r\n// //           <Button text=\"Modify\" color=\"#17a2b8\" onClick={() => alert('Trip Modified!')} />\r\n// //           <Button text=\"Delete\" color=\"#dc3545\" onClick={() => alert('Trip Deleted!')} />\r\n// //           <Button text=\"Clear\" color=\"#ffc107\" onClick={() => {\r\n// //             setTripId('');\r\n// //             setCustomerId('');\r\n// //             setSource('');\r\n// //             setDestination('');\r\n// //             setJourneyDate('');\r\n// //             setEndDate('');\r\n// //             setCustomerName('');\r\n// //             setAddress('');\r\n// //             setPhone('');\r\n// //           }} />\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default BookingDashboard;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import InputField from '../components/InputField';\r\n// import Button from '../components/Button';\r\n\r\n// const BookingDashboard = () => {\r\n//   const navigate = useNavigate();\r\n//   const [source, setSource] = useState('');\r\n//   const [destination, setDestination] = useState('');\r\n//   const [journeyDate, setJourneyDate] = useState('');\r\n//   const [endDate, setEndDate] = useState('');\r\n//   const [customerName, setCustomerName] = useState('');\r\n//   const [address, setAddress] = useState('');\r\n//   const [phone, setPhone] = useState('');\r\n\r\n//   const handleConfirm = () => {\r\n//     const customerId = `CUST${Math.floor(1000 + Math.random() * 9000)}`; // Auto-generate customer ID\r\n//     const tripId = `TRIP${Math.floor(1000 + Math.random() * 9000)}`; // Auto-generate trip ID\r\n\r\n//     const bookingDetails = {\r\n//       customerId,\r\n//       tripId,\r\n//       source,\r\n//       destination,\r\n//       journeyDate,\r\n//       endDate,\r\n//       customerName,\r\n//       address,\r\n//       phone,\r\n//     };\r\n\r\n//     navigate('/confirm-booking', { state: bookingDetails }); // Pass details to ConfirmBooking page\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', backgroundColor: '#2b2b42', color: '#fff', minHeight: '100vh', textAlign: 'center' }}>\r\n//       <h2>Booking Dashboard</h2>\r\n//       <div style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#3e3e58', padding: '20px', borderRadius: '8px' }}>\r\n//         <InputField label=\"Source\" value={source} onChange={(e) => setSource(e.target.value)} />\r\n//         <InputField label=\"Destination\" value={destination} onChange={(e) => setDestination(e.target.value)} />\r\n//         <InputField label=\"Journey Date\" type=\"date\" value={journeyDate} onChange={(e) => setJourneyDate(e.target.value)} />\r\n//         <InputField label=\"End Date\" type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n//         <InputField label=\"Customer Name\" value={customerName} onChange={(e) => setCustomerName(e.target.value)} />\r\n//         <InputField label=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} />\r\n//         <InputField label=\"Phone Number\" value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n\r\n//         <div style={{ marginTop: '20px' }}>\r\n//           <Button text=\"Confirm\" color=\"#28a745\" onClick={handleConfirm} />\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDashboard;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const BookingDashboard = () => {\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     source: '',\r\n//     destination: '',\r\n//     journeyDate: '',\r\n//     endDate: '',\r\n//     customerName: '',\r\n//     address: '',\r\n//     phone: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     const customerId = `CUST${Math.floor(1000 + Math.random() * 9000)}`;\r\n//     const tripId = `TRIP${Math.floor(1000 + Math.random() * 9000)}`;\r\n\r\n//     navigate('/confirm-booking', {\r\n//       state: { ...formData, customerId, tripId },\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Booking Dashboard</h2>\r\n//       <form>\r\n//         <input name=\"source\" placeholder=\"Source\" onChange={handleChange} />\r\n//         <input name=\"destination\" placeholder=\"Destination\" onChange={handleChange} />\r\n//         <input name=\"journeyDate\" type=\"date\" onChange={handleChange} />\r\n//         <input name=\"endDate\" type=\"date\" onChange={handleChange} />\r\n//         <input name=\"customerName\" placeholder=\"Customer Name\" onChange={handleChange} />\r\n//         <input name=\"address\" placeholder=\"Address\" onChange={handleChange} />\r\n//         <input name=\"phone\" placeholder=\"Phone\" onChange={handleChange} />\r\n//         <button type=\"button\" onClick={handleSubmit}>\r\n//           Next\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDashboard;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const BookingDashboard = () => {\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   const navigate = useNavigate();\r\n//   const [formData, setFormData] = useState({\r\n//     source: '',\r\n//     destination: '',\r\n//     journeyDate: '',\r\n//     endDate: '',\r\n//     customerName: '',\r\n//     address: '',\r\n//     phone: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/booking', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const result = await response.json();\r\n//         navigate('/confirm-booking', {\r\n//           state: { ...formData, bookingId: result.bookingId },\r\n//         });\r\n//       } else {\r\n//         alert('Booking failed. Please try again.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error during booking:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n     \r\n// style={{\r\n//   minHeight: '100vh',\r\n//   backgroundImage: 'url(\"https://wallpaperaccess.com/full/136008.jpg\")',\r\n//   backgroundSize: 'cover',\r\n//   backgroundPosition: 'center',\r\n//   display: 'flex',\r\n//   alignItems: 'center',\r\n//   justifyContent: 'center',\r\n//   fontFamily: 'Arial, sans-serif',\r\n//   color: '#fff',\r\n//   position: 'relative',\r\n// }}\r\n// >\r\n// <button\r\n//   onClick={() => setShowModal(true)}\r\n//   style={{\r\n//     padding: '15px 30px',\r\n//     fontSize: '16px',\r\n//     border: 'none',\r\n//     borderRadius: '5px',\r\n//     background: 'linear-gradient(90deg, #fffe5f, #feb47b)',\r\n//     color: '#000',\r\n//     cursor: 'pointer',\r\n//     boxShadow: '0 4px 6px rgba(0, 0, 0, 0.3)',\r\n//     transition: 'all 0.3s ease',\r\n//   }}\r\n//   onMouseOver={(e) => {\r\n//     e.target.style.transform = 'scale(1.1)';\r\n//     e.target.style.boxShadow = '0 6px 8px rgba(0, 0, 0, 0.5)';\r\n//   }}\r\n//   onMouseOut={(e) => {\r\n//     e.target.style.transform = 'scale(1)';\r\n//     e.target.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.3)';\r\n//   }}\r\n// >\r\n//   Open Booking Form\r\n// </button>\r\n\r\n// {showModal && (\r\n//   <div\r\n//     style={{\r\n//       position: 'fixed',\r\n//       top: '0',\r\n//       left: '0',\r\n//       width: '100%',\r\n//       height: '100%',\r\n//       background: 'rgba(0, 0, 0, 0.7)',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       zIndex: 1000,\r\n//     }}\r\n//   >\r\n//     <div\r\n//       style={{\r\n//         background: '#fff',\r\n//         borderRadius: '10px',\r\n//         padding: '30px',\r\n//         width: '400px',\r\n//         boxShadow: '0 8px 15px rgba(0, 0, 0, 0.5)',\r\n//         position: 'relative',\r\n//       }}\r\n//     >\r\n//       <h2\r\n//         style={{\r\n//           textAlign: 'center',\r\n//           marginBottom: '20px',\r\n//           color: '#333',\r\n//           fontSize: '20px',\r\n//         }}\r\n//       >\r\n//         Booking Form\r\n//       </h2>\r\n//       <form style={{ display: 'flex', flexDirection: 'column', gap: '15px' }}>\r\n//         <input\r\n//           name=\"source\"\r\n//           placeholder=\"Source\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"destination\"\r\n//           placeholder=\"Destination\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"journeyDate\"\r\n//           type=\"date\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"endDate\"\r\n//           type=\"date\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"customerName\"\r\n//           placeholder=\"Customer Name\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"address\"\r\n//           placeholder=\"Address\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <input\r\n//           name=\"phone\"\r\n//           placeholder=\"Phone\"\r\n//           onChange={handleChange}\r\n//           style={{\r\n//             padding: '10px',\r\n//             border: '1px solid #ccc',\r\n//             borderRadius: '5px',\r\n//             fontSize: '14px',\r\n//           }}\r\n//         />\r\n//         <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={() => setShowModal(false)}\r\n//             style={{\r\n//               padding: '10px 20px',\r\n//               backgroundColor: '#ccc',\r\n//               border: 'none',\r\n//               borderRadius: '5px',\r\n//               cursor: 'pointer',\r\n//             }}\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//           <button\r\n//             type=\"button\"\r\n//             onClick={handleSubmit}\r\n//             style={{\r\n//               padding: '10px 20px',\r\n//               backgroundColor: '#ff7e5f',\r\n//               border: 'none',\r\n//               borderRadius: '5px',\r\n//               color: '#fff',\r\n//               cursor: 'pointer',\r\n//             }}\r\n//           >\r\n//             Next\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   </div>\r\n// )}\r\n// </div>\r\n// );\r\n// };\r\n\r\n// export default BookingDashboard;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const BookingDashboard = () => {\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const [formData, setFormData] = useState({\r\n//     source: '',\r\n//     destination: '',\r\n//     journeyDate: '',\r\n//     endDate: '',\r\n//     customerName: '',\r\n//     address: '',\r\n//     phone: '',\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/booking', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const result = await response.json();\r\n//         navigate('/confirm-booking', {\r\n//           state: { ...formData, bookingId: result.bookingId },\r\n//         });\r\n//       } else {\r\n//         alert('Booking failed. Please try again.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error during booking:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n//       <button onClick={() => setShowModal(true)}>Open Booking Form</button>\r\n\r\n//       {showModal && (\r\n//         <div\r\n//           style={{\r\n//             position: 'fixed',\r\n//             top: '0',\r\n//             left: '0',\r\n//             width: '100%',\r\n//             height: '100%',\r\n//             background: 'rgba(0, 0, 0, 0.7)',\r\n//             display: 'flex',\r\n//             alignItems: 'center',\r\n//             justifyContent: 'center',\r\n//             zIndex: 1000,\r\n//           }}\r\n//         >\r\n//           <div\r\n//             style={{\r\n//               background: '#fff',\r\n//               borderRadius: '10px',\r\n//               padding: '30px',\r\n//               width: '400px',\r\n//               boxShadow: '0 8px 15px rgba(0, 0, 0, 0.5)',\r\n//               position: 'relative',\r\n//             }}\r\n//           >\r\n//             <h2 style={{ textAlign: 'center' }}>Booking Form</h2>\r\n//             <form>\r\n//               <input\r\n//                 name=\"source\"\r\n//                 placeholder=\"Source\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"destination\"\r\n//                 placeholder=\"Destination\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"journeyDate\"\r\n//                 type=\"date\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"endDate\"\r\n//                 type=\"date\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"customerName\"\r\n//                 placeholder=\"Customer Name\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"address\"\r\n//                 placeholder=\"Address\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <input\r\n//                 name=\"phone\"\r\n//                 placeholder=\"Phone\"\r\n//                 onChange={handleChange}\r\n//               />\r\n//               <button type=\"button\" onClick={handleSubmit}>Next</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDashboard;\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BookingDashboard = () => {\r\n  const [formData, setFormData] = useState({\r\n    source: '',\r\n    destination: '',\r\n    journeyDate: '',\r\n    endDate: '',\r\n    customerName: '',\r\n    address: '',\r\n    phone: '',\r\n  });\r\n\r\n  const [packages, setPackages] = useState([]);\r\n  const [selectedPackage, setSelectedPackage] = useState(null);\r\n  const [showPackages, setShowPackages] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const fetchPackages = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/packages?source=${formData.source}&destination=${formData.destination}`\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPackages(data);\r\n        setShowPackages(true);\r\n      } else {\r\n        alert('No packages available for the selected source and destination.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching packages:', error);\r\n    }\r\n  };\r\n\r\n  const handleNext = (e) => {\r\n    e.preventDefault();\r\n    fetchPackages();\r\n  };\r\n\r\n  const handlePackageSelect = (pkg) => {\r\n    setSelectedPackage(pkg);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedPackage) {\r\n      navigate('/confirm-booking', {\r\n        state: { ...formData, ...selectedPackage },\r\n      });\r\n    } else {\r\n      alert('Please select a package to proceed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      <form style={{ width: '400px' }} onSubmit={handleNext}>\r\n        <input\r\n          name=\"source\"\r\n          placeholder=\"Source\"\r\n          value={formData.source}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"destination\"\r\n          placeholder=\"Destination\"\r\n          value={formData.destination}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"journeyDate\"\r\n          type=\"date\"\r\n          value={formData.journeyDate}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"endDate\"\r\n          type=\"date\"\r\n          value={formData.endDate}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"customerName\"\r\n          placeholder=\"Customer Name\"\r\n          value={formData.customerName}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          name=\"phone\"\r\n          placeholder=\"Phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Next</button>\r\n      </form>\r\n\r\n      {showPackages && (\r\n        <div style={{ marginTop: '20px' }}>\r\n          <h3>Select a Package</h3>\r\n          {packages.length > 0 ? (\r\n            packages.map((pkg, index) => (\r\n              <div key={index} style={{ margin: '10px 0' }}>\r\n                <button\r\n                  style={{\r\n                    padding: '10px',\r\n                    backgroundColor: '#007bff',\r\n                    color: '#fff',\r\n                    border: 'none',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={() => handlePackageSelect(pkg)}\r\n                >\r\n                  <h4>{pkg.package_details}</h4>\r\n                  <p>Price: ${pkg.price}</p>\r\n                  <p>Source: {pkg.source}</p>\r\n                  <p>Destination: {pkg.destination}</p>\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No packages available for the selected source and destination.</p>\r\n          )}\r\n          {selectedPackage && (\r\n            <div>\r\n              <button onClick={handleSubmit}>Confirm Booking</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingDashboard;\r\n"],"mappingsvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnB,WAAW,CAAEoB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,6CAA6CxB,QAAQ,CAACE,MAAM,gBAAgBF,QAAQ,CAACG,WAAW,EAClG,CAAC;MAED,IAAIoB,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCjB,WAAW,CAACgB,IAAI,CAAC;QACjBZ,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACLc,KAAK,CAAC,gEAAgE,CAAC;MACzE;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,UAAU,GAAId,CAAC,IAAK;IACxBA,CAAC,CAACe,cAAc,CAAC,CAAC;IAClBV,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAMW,mBAAmB,GAAIC,GAAG,IAAK;IACnCtB,kBAAkB,CAACsB,GAAG,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIxB,eAAe,EAAE;MACnBI,QAAQ,CAAC,kBAAkB,EAAE;QAC3BqB,KAAK,EAAE;UAAE,GAAGpC,QAAQ;UAAE,GAAGW;QAAgB;MAC3C,CAAC,CAAC;IACJ,CAAC,MAAM;MACLiB,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKwC,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClG7C,OAAA;MAAMwC,KAAK,EAAE;QAAEM,KAAK,EAAE;MAAQ,CAAE;MAACC,QAAQ,EAAEb,UAAW;MAAAW,QAAA,gBACpD7C,OAAA;QACEqB,IAAI,EAAC,QAAQ;QACb2B,WAAW,EAAC,QAAQ;QACpB1B,KAAK,EAAEnB,QAAQ,CAACE,MAAO;QACvB4C,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,aAAa;QAClB2B,WAAW,EAAC,aAAa;QACzB1B,KAAK,EAAEnB,QAAQ,CAACG,WAAY;QAC5B2C,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,aAAa;QAClBiC,IAAI,EAAC,MAAM;QACXhC,KAAK,EAAEnB,QAAQ,CAACI,WAAY;QAC5B0C,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,SAAS;QACdiC,IAAI,EAAC,MAAM;QACXhC,KAAK,EAAEnB,QAAQ,CAACK,OAAQ;QACxByC,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,cAAc;QACnB2B,WAAW,EAAC,eAAe;QAC3B1B,KAAK,EAAEnB,QAAQ,CAACM,YAAa;QAC7BwC,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,SAAS;QACd2B,WAAW,EAAC,SAAS;QACrB1B,KAAK,EAAEnB,QAAQ,CAACO,OAAQ;QACxBuC,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QACEqB,IAAI,EAAC,OAAO;QACZ2B,WAAW,EAAC,OAAO;QACnB1B,KAAK,EAAEnB,QAAQ,CAACQ,KAAM;QACtBsC,QAAQ,EAAE9B;MAAa;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFrD,OAAA;QAAQsD,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EAENrC,YAAY,iBACXhB,OAAA;MAAKwC,KAAK,EAAE;QAAEe,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,gBAChC7C,OAAA;QAAA6C,QAAA,EAAI;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBzC,QAAQ,CAAC4C,MAAM,GAAG,CAAC,GAClB5C,QAAQ,CAAC6C,GAAG,CAAC,CAACpB,GAAG,EAAEqB,KAAK,kBACtB1D,OAAA;QAAiBwC,KAAK,EAAE;UAAEmB,MAAM,EAAE;QAAS,CAAE;QAAAd,QAAA,eAC3C7C,OAAA;UACEwC,KAAK,EAAE;YACLoB,OAAO,EAAE,MAAM;YACfC,eAAe,EAAE,SAAS;YAC1BC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,MAAM,EAAE;UACV,CAAE;UACFC,OAAO,EAAEA,CAAA,KAAM7B,mBAAmB,CAACC,GAAG,CAAE;UAAAQ,QAAA,gBAExC7C,OAAA;YAAA6C,QAAA,EAAKR,GAAG,CAAC6B;UAAe;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9BrD,OAAA;YAAA6C,QAAA,GAAG,UAAQ,EAACR,GAAG,CAAC8B,KAAK;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BrD,OAAA;YAAA6C,QAAA,GAAG,UAAQ,EAACR,GAAG,CAAChC,MAAM;UAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BrD,OAAA;YAAA6C,QAAA,GAAG,eAAa,EAACR,GAAG,CAAC/B,WAAW;UAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GAfDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBV,CACN,CAAC,gBAEFrD,OAAA;QAAA6C,QAAA,EAAG;MAA8D;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrE,EACAvC,eAAe,iBACdd,OAAA;QAAA6C,QAAA,eACE7C,OAAA;UAAQiE,OAAO,EAAE3B,YAAa;UAAAO,QAAA,EAAC;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnD,EAAA,CA9IID,gBAAgB;EAAA,QAeHH,WAAW;AAAA;AAAAsE,EAAA,GAfxBnE,gBAAgB;AAgJtB,eAAeA,gBAAgB;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}