{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshitha Kini\\\\Desktop\\\\minidb - Copy\\\\travel-agency-system\\\\frontend\\\\src\\\\pages\\\\ConfirmationPage.js\",\n  _s = $RefreshSig$();\n// // import React from \"react\";\n// // import { useLocation } from \"react-router-dom\";\n\n// // const ConfirmationPage = () => {\n// //   const { state } = useLocation();\n\n// //   return (\n// //     <div>\n// //       <h2>Booking Successful!</h2>\n// //       <p>Customer ID: {state.customerId}</p>\n// //       <p>Trip ID: {state.tripId}</p>\n// //       <p>Source: {state.source}</p>\n// //       <p>Destination: {state.destination}</p>\n// //       <p>Journey Date: {state.journeyDate}</p>\n// //       <p>End Date: {state.endDate}</p>\n// //       <p>Customer Name: {state.customerName}</p>\n// //       <p>Address: {state.address}</p>\n// //       <p>Phone: {state.phone}</p>\n// //     </div>\n// //   );\n// // };\n\n// // export default ConfirmationPage;\n\n// import React from 'react';\n// import { useLocation } from 'react-router-dom';\n\n// const ConfirmationPage = () => {\n//   const { state } = useLocation();\n\n//   return (\n//     <div>\n//       <h2>Booking Confirmation</h2>\n//       <pre>{JSON.stringify(state, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// export default ConfirmationPage;\n\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmBooking = () => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const handleConfirm = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/bookings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(state)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        navigate('/confirmation', {\n          state: data\n        });\n      } else {\n        console.error('Error:', await response.text());\n      }\n    } catch (error) {\n      console.error('Network Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Confirm Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(state, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfirmBooking, \"swtv2cUIBi1p5TRCrVajRailzpM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ConfirmBooking;\nexport default ConfirmBooking;\nvar _c;\n$RefreshReg$(_c, \"ConfirmBooking\");","map":{"version":3,"names":["React","useNavigate","useLocation","jsxDEV","_jsxDEV","ConfirmBooking","_s","state","navigate","handleConfirm","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","error","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Harshitha Kini/Desktop/minidb - Copy/travel-agency-system/frontend/src/pages/ConfirmationPage.js"],"sourcesContent":["// // import React from \"react\";\r\n// // import { useLocation } from \"react-router-dom\";\r\n\r\n// // const ConfirmationPage = () => {\r\n// //   const { state } = useLocation();\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Booking Successful!</h2>\r\n// //       <p>Customer ID: {state.customerId}</p>\r\n// //       <p>Trip ID: {state.tripId}</p>\r\n// //       <p>Source: {state.source}</p>\r\n// //       <p>Destination: {state.destination}</p>\r\n// //       <p>Journey Date: {state.journeyDate}</p>\r\n// //       <p>End Date: {state.endDate}</p>\r\n// //       <p>Customer Name: {state.customerName}</p>\r\n// //       <p>Address: {state.address}</p>\r\n// //       <p>Phone: {state.phone}</p>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default ConfirmationPage;\r\n\r\n// import React from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// const ConfirmationPage = () => {\r\n//   const { state } = useLocation();\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Booking Confirmation</h2>\r\n//       <pre>{JSON.stringify(state, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ConfirmationPage;\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst ConfirmBooking = () => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/bookings', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(state),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        navigate('/confirmation', { state: data });\r\n      } else {\r\n        console.error('Error:', await response.text());\r\n      }\r\n    } catch (error) {\r\n      console.error('Network Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Confirm Booking</h2>\r\n      <pre>{JSON.stringify(state, null, 2)}</pre>\r\n      <button onClick={handleConfirm}>Confirm</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmBooking;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAM,CAAC,GAAGL,WAAW,CAAC,CAAC;EAC/B,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,KAAK;MAC5B,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCX,QAAQ,CAAC,eAAe,EAAE;UAAED,KAAK,EAAEW;QAAK,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLE,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAE,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAAmB,QAAA,EAAMR,IAAI,CAACC,SAAS,CAACT,KAAK,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3CvB,OAAA;MAAQwB,OAAO,EAAEnB,aAAc;MAAAc,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9BID,cAAc;EAAA,QACAH,WAAW,EACZD,WAAW;AAAA;AAAA4B,EAAA,GAFxBxB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}